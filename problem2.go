// https://projecteuler.net/problem=2

// Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
// 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
// By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

package main

import "fmt"

func calculate_fibonacci_sequence(limit int)  []int{
	sequence := []int{}
	i := 1
	
	for {
		if i < limit{
		// fmt.Printf("%d\n", i)
		if i == 1{
			sequence = append(sequence, i)
			i += 1
		} else {
			// fmt.Printf("%d\n", sequence[len(sequence)-1])
			sequence = append(sequence, i)
			i += sequence[len(sequence)-2]
		}
		} else {
			return sequence
		}
	}
}

func sum_even_values_of_array(numarray[] int) int {
	arrSum := 0

    for i := 0; i < len(numarray); i++ {
		if numarray[i]%2 == 0 {
        arrSum = arrSum + numarray[i]
		}
    }
	return arrSum
}


func main() {
	// fmt.Printf("%v", calculate_fibonacci_sequence(89))
	fmt.Printf("%d", sum_even_values_of_array(calculate_fibonacci_sequence(4000000)))
}
